% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/three-legged-oauth.R
\name{credentials_user_oauth2}
\alias{credentials_user_oauth2}
\title{Get an OAuth token for a user}
\usage{
credentials_user_oauth2(scopes, app = gargle_app(), ...)
}
\arguments{
\item{scopes}{A character vector of scopes to request.}

\item{app}{An OAuth consumer application, created by \code{\link[httr:oauth_app]{httr::oauth_app()}}.}

\item{...}{Arguments passed on to \code{gargle2.0_token}
\describe{
  \item{email}{Optional. Allows user to target a specific Google identity. If
specified, this is used only for token lookup, i.e. to determine if a
suitable token is already available in the cache. The email associated with
a token when it's cached is determined from the token itself, not from this
argument. Use \code{NA} to match nothing and force the OAuth dance in the
browser.}
  \item{use_oob}{If \code{FALSE}, use a local webserver for the OAuth dance.
Otherwise, provide a URL to the user and prompt for a validation code.
Defaults to the option "gargle.oob_default" or \code{TRUE} if httpuv is not
installed.}
  \item{cache}{A logical value or a string. \code{TRUE} means to cache using the
default user-level cache file, \code{~/.R/gargle/gargle-oauth}, \code{FALSE} means
don't cache, and \code{NA} means to guess using some sensible heuristics. A
string means use the specified path as the cache file.}
  \item{user_params}{Named list holding endpoint specific parameters to pass to
the server when posting the request for obtaining or refreshing the
access token.}
  \item{type}{content type used to override incorrect server response}
  \item{credentials}{Advanced use only: allows you to completely customise
token generation.}
}}
}
\description{
Consults the token cache for a suitable OAuth token and, if
unsuccessful, gets a token via the browser flow. A cached token is suitable
if it's compatible with the user's request in this sense:
\itemize{
\item OAuth app must be same.
\item Scopes. This is a check for inclusion, not exact equality.
\item Email, if provided, must be same.
}

If multiple suitable tokens are found, user is presented with a chooser.
Therefore, in a non-interactive setting, it's important to uniquely identify
the token, by providing the \code{"email"}, or by making sure only one suitable
token will be found in the cache. Non-interactive use also suggests it might
be time to use a \link[=credentials_service_account]{service account token}. This
is a wrapper around \code{\link[=gargle2.0_token]{gargle2.0_token()}}.
}
\examples{
\dontrun{
## Drive scope, built-in gargle demo app
scopes <- "https://www.googleapis.com/auth/drive"
credentials_user_oauth2(scopes, app = gargle_app())

## bring your own app
app <- httr::oauth_app(
  appname = "my_awesome_app",
  key = "keykeykeykeykeykey",
  secret = "secretsecretsecret"
)
credentials_user_oauth2(scopes, app)
}
}
