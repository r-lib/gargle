% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/response_process.R
\name{response_process}
\alias{response_process}
\title{Process a Google API response}
\usage{
response_process(resp, raw = FALSE)
}
\arguments{
\item{resp}{Object of class \code{response} from \link{httr}.}

\item{raw}{Logical. Whether to return parsed content (\code{FALSE}) or in \code{raw}
form.}
}
\value{
The content of the request.
}
\description{
Intended primarily for internal use in client packages that provide
high-level wrappers for users. Typically applied as the final step in this
sequence of calls:
\itemize{
\item Request prepared with \code{\link[=request_build]{request_build()}}.
\item Request made with \code{\link[=request_make]{request_make()}}.
\item Response processed with \code{\link[=response_process]{response_process()}}.
}

\code{response_process()} also catches HTTP errors and throws them with as much
detail as possible, i.e. the intent is to forward all specifics returned by
the API.
}
\details{
A redacted version of the \code{resp} input is returned in the condition (auth
tokens are removed). Use functions such as \code{rlang::last_error()} or
\code{rlang::catch_cnd()} to capture the condition and do a more detailed forensic
examination.
}
\seealso{
Other requests and responses: \code{\link{request_develop}},
  \code{\link{request_make}}
}
\concept{requests and responses}
