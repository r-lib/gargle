% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oauth-app.R
\name{oauth_app}
\alias{oauth_app}
\title{Create an OAuth application.}
\usage{
oauth_app(appname = NULL, key = NULL, secret = NULL, path = NULL)
}
\arguments{
\item{appname}{name of the application.  This is not used for OAuth, but
is used to make it easier to identify different applications and
provide a consistent way of storing secrets in environment variables.}

\item{key}{consumer key (equivalent to a user name)}

\item{secret}{consumer secret. This is not equivalent to a password, and
  is not really a secret. If you are writing an API wrapper package, it
  is fine to include this secret in your package code.

  Use \code{NULL} to not store a secret: this is useful if you're relying on
  cached OAuth tokens.}

\item{path}{Path to the JSON file. If given, any input provided via \code{key}
(the "client_id", in Google's vocabulary) and \code{secret} is ignored.}
}
\description{
Essentially a wrapper around \code{\link[httr:oauth_app]{httr::oauth_app()}} with an additional argument,
\code{path}, that enables app creation from the JSON download from \href{https://console.developers.google.com}{GoogleDevelopers Console}. The client secret
and id are contained in this file and, if no \code{appname} is given, the
\code{"project_id"} from the JSON is used.
}
\examples{
\dontrun{
oauth_app(
  path = "/path/to/the/JSON/you/downloaded/from/google/dev/console.json"
)
}
google_app <- oauth_app(
  appname = "my-awesome-google-api-wrapping-package",
  key = "123456789.apps.googleusercontent.com",
  secret = "abcdefghijklmnopqrstuvwxyz"
)
}
